# Deploys a L1 network on Azure for Testnet / Dev-Testnet
# Builds the l1 network image, kills any running container, pushes the image to dockerhub and starts the l1 network on azure
#
# The L1 network is a docker container that runs 1 x (eth node + prysm beacon + prysm validator)
# It exposes the following ports:
# HTTP:       8025, 8026
# WebSocket:  9000, 9001
#
# Exposes the following addresses: (only accessible internally)
#  testnet-eth2network-DEPLOYNUMBER.uksouth.azurecontainer.io
# or
#  dev-testnet-eth2network-DEPLOYNUMBER.uksouth.azurecontainer.io
#
# The scheduled deployment runs at 03:05 on every day-of-week from Tuesday through Saturday, for dev-testnet only.

name: '[M] Deploy Testnet L1'

on:
  workflow_dispatch:
    inputs:
      testnet_type:
        description: 'Testnet Type'
        required: true
        default: 'dev-testnet'
        type: choice
        options:
          - 'dev-testnet'
          - 'testnet'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: 'Set up Docker'
        uses: docker/setup-buildx-action@v1

      - name: 'Sets env vars for testnet'
        if: ${{ github.event.inputs.testnet_type == 'testnet' }}
        run: |
          echo "ETH2NETWORK_BUILD_TAG=testnetobscuronet.azurecr.io/obscuronet/eth2network:latest" >> $GITHUB_ENV
          echo "L1_DOCKER_BUILD_TAG=testnetobscuronet.azurecr.io/obscuronet/testnet_l1network:latest" >> $GITHUB_ENV
          echo "L1_CONTAINER_NAME=testnet-eth2network" >> $GITHUB_ENV

      - name: 'Sets env vars for dev-testnet'
        if: ${{ github.event.inputs.testnet_type == 'dev-testnet' }}
        run: |
          echo "ETH2NETWORK_BUILD_TAG=testnetobscuronet.azurecr.io/obscuronet/dev_eth2network:latest" >> $GITHUB_ENV
          echo "L1_DOCKER_BUILD_TAG=testnetobscuronet.azurecr.io/obscuronet/dev_testnet_l1network:latest" >> $GITHUB_ENV
          echo "L1_CONTAINER_NAME=dev-testnet-eth2network" >> $GITHUB_ENV

# to be used when our dockerhub account is fixed
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v3
#        with:
#          push: true
#          tags: obscuronet/testnet_l1network:latest
#          file: ./testnet/eth2network.Dockerfile

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Login to Azure docker registry'
        uses: azure/docker-login@v1
        with:
          login-server: testnetobscuronet.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'Build and push image'
        # DOCKER_BUILDKIT=1 will enable  the new docker build kit that allows us to use build only caches on RUN commands.
        # Tag the same image with 2 tags and push with the -a flag which pushes all images
        run: |
          DOCKER_BUILDKIT=1 docker build -t ${{env.ETH2NETWORK_BUILD_TAG}} -t ${{env.L1_DOCKER_BUILD_TAG}} -f testnet/eth2network.Dockerfile .
          docker push ${{env.L1_DOCKER_BUILD_TAG}}
          docker push ${{env.ETH2NETWORK_BUILD_TAG}}
      - name: 'Deploy L1 to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{env.L1_CONTAINER_NAME}}
          image: ${{env.L1_DOCKER_BUILD_TAG}}
          registry-login-server: testnetobscuronet.azurecr.io
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: ${{env.L1_CONTAINER_NAME}}
          location: 'uksouth'
          restart-policy: 'Never'
          secure-environment-variables: DD_API_KEY=${{ secrets.DD_API_KEY }}
          environment-variables: DD_HOSTNAME=${{ github.event.inputs.testnet_type }}-eth2network
          command-line: /home/obscuro/go-obscuro/.github/workflows/runner-scripts/run-datadog.sh /home/obscuro/go-obscuro/integration/eth2network/main/main --blockTimeSecs=15 --numNodes=1 --gethHTTPStartPort=8025 --gethWSStartPort=9000 --prefundedAddrs='${{ secrets.GETHNETWORK_PREFUNDED_ADDR_WORKER }},${{ secrets.GETHNETWORK_PREFUNDED_ADDR_0 }},${{ secrets.GETHNETWORK_PREFUNDED_ADDR_1 }}'
          # Ports start at 9000 for Websockets and 8000 for Start port and 80025 for Http Port
          # Each node has Port + id
          ports: '8025 8026 9000 9001'
          cpu: 2
          memory: 8
