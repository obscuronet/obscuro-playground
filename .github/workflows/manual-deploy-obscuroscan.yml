# Deploys Obscuroscan on Azure for Testnet
# Builds the Obscuroscan network image, pushes the image to dockerhub and starts Obscuroscan on Azure as a web app.
# This allows Obscuroscan to be served using HTTPS, important because API calls can then be made from different domains.
# Obscuroscan is a docker container that runs the obscuroscan package
# It exposes the following ports:
# HTTPS: 80
#
# Exposes the following addresses:
# https://testnet-obscuroscan.azurewebsites.net

name: '[M] Deploy Testnet Obscuroscan'

on:
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: testnet-obscuroscan
  CONTAINER_REGISTRY: testnetobscuronet.azurecr.io  # set secret with Container Registry URL, example : xyz.azurecr.io 
  AZURE_RESOURCE_GROUP: testnet   # set this to your Azure Resource group's name - Needed only if you are provisioning the app in the workflow
  AZURE_APP_PLAN: obscuroscan-plan  # set this to your App service plan's name - Needed only if you are provisioning the app in the workflow
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Azure authentication
      uses: azure/login@v1
      with:
        login-server: testnetobscuronet.azurecr.io
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: ACR authentication
      uses: azure/docker-login@v1
      with:
        login-server: testnetobscuronet.azurecr.io
        username: testnetobscuronet
        password: ${{ secrets.REGISTRY_PASSWORD }}    
    - name: Docker Build & Push to ACR
      run: |
        DOCKER_BUILDKIT=1 docker build -t testnetobscuronet.azurecr.io/obscuronet/obscuro_testnet_obscuroscan:latest -f testnet/obscuroscan.Dockerfile  .
        docker push testnetobscuronet.azurecr.io/obscuronet/obscuro_testnet_obscuroscan:latest

    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} 
        images: testnetobscuronet.azurecr.io/obscuronet/obscuro_testnet_obscuroscan:latest
        startup-command: './tools/obscuroscan/main/main --rpcServerAddress http://testnet.obscu.ro:80 --address 0.0.0.0:80'