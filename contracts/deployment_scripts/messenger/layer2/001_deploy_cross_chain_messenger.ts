import {HardhatRuntimeEnvironment} from 'hardhat/types';
import {DeployFunction} from 'hardhat-deploy/types';

/* 
    This script deploys the L2 side of the cross chain messenger.
    It requires the address of the message bus on the L2 side, which is generated by the enclave
    on genesis. 
*/


const func: DeployFunction = async function (hre: HardhatRuntimeEnvironment) {
    const { 
        deployments, 
        getNamedAccounts
    } = hre;

    // Get the prefunded L2 deployer account to use for deploying.
    const {deployer} = await getNamedAccounts();

    console.log(`Script: 001_deploy_cross_chain_messenger.ts - address used: ${deployer}`);

    // TODO: Remove hardcoded L2 message bus address when properly exposed.
    const messageBusAddress = hre.ethers.utils.getAddress("0x526c84529b2b8c11f57d93d3f5537aca3aecef9b");
    // Deploy the L2 Cross chain messenger and use the L2 bus for validation
    await deployments.deploy('CrossChainMessenger', {
        from: deployer,
        log: true,
        proxy: {
            proxyContract: "OpenZeppelinTransparentProxy",
            execute: {
                init: {
                    methodName: "initialize",
                    args: [ messageBusAddress ]
                }
            }
        }
    });
    console.log("Deployed!")
};

export default func;
func.tags = ['CrossChainMessenger', 'CrossChainMessenger_deploy'];
