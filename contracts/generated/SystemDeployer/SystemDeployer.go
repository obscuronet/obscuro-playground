// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package SystemDeployer

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// SystemDeployerMetaData contains all meta data concerning the SystemDeployer contract.
var SystemDeployerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eoaAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"SystemContractDeployed\",\"type\":\"event\"}]",
	Bin: "",
}

// SystemDeployerABI is the input ABI used to generate the binding from.
// Deprecated: Use SystemDeployerMetaData.ABI instead.
var SystemDeployerABI = SystemDeployerMetaData.ABI

// SystemDeployerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SystemDeployerMetaData.Bin instead.
var SystemDeployerBin = SystemDeployerMetaData.Bin

// DeploySystemDeployer deploys a new Ethereum contract, binding an instance of SystemDeployer to it.
func DeploySystemDeployer(auth *bind.TransactOpts, backend bind.ContractBackend, eoaAdmin common.Address) (common.Address, *types.Transaction, *SystemDeployer, error) {
	parsed, err := SystemDeployerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SystemDeployerBin), backend, eoaAdmin)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SystemDeployer{SystemDeployerCaller: SystemDeployerCaller{contract: contract}, SystemDeployerTransactor: SystemDeployerTransactor{contract: contract}, SystemDeployerFilterer: SystemDeployerFilterer{contract: contract}}, nil
}

// SystemDeployer is an auto generated Go binding around an Ethereum contract.
type SystemDeployer struct {
	SystemDeployerCaller     // Read-only binding to the contract
	SystemDeployerTransactor // Write-only binding to the contract
	SystemDeployerFilterer   // Log filterer for contract events
}

// SystemDeployerCaller is an auto generated read-only Go binding around an Ethereum contract.
type SystemDeployerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemDeployerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SystemDeployerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemDeployerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SystemDeployerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemDeployerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SystemDeployerSession struct {
	Contract     *SystemDeployer   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SystemDeployerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SystemDeployerCallerSession struct {
	Contract *SystemDeployerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// SystemDeployerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SystemDeployerTransactorSession struct {
	Contract     *SystemDeployerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// SystemDeployerRaw is an auto generated low-level Go binding around an Ethereum contract.
type SystemDeployerRaw struct {
	Contract *SystemDeployer // Generic contract binding to access the raw methods on
}

// SystemDeployerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SystemDeployerCallerRaw struct {
	Contract *SystemDeployerCaller // Generic read-only contract binding to access the raw methods on
}

// SystemDeployerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SystemDeployerTransactorRaw struct {
	Contract *SystemDeployerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSystemDeployer creates a new instance of SystemDeployer, bound to a specific deployed contract.
func NewSystemDeployer(address common.Address, backend bind.ContractBackend) (*SystemDeployer, error) {
	contract, err := bindSystemDeployer(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SystemDeployer{SystemDeployerCaller: SystemDeployerCaller{contract: contract}, SystemDeployerTransactor: SystemDeployerTransactor{contract: contract}, SystemDeployerFilterer: SystemDeployerFilterer{contract: contract}}, nil
}

// NewSystemDeployerCaller creates a new read-only instance of SystemDeployer, bound to a specific deployed contract.
func NewSystemDeployerCaller(address common.Address, caller bind.ContractCaller) (*SystemDeployerCaller, error) {
	contract, err := bindSystemDeployer(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SystemDeployerCaller{contract: contract}, nil
}

// NewSystemDeployerTransactor creates a new write-only instance of SystemDeployer, bound to a specific deployed contract.
func NewSystemDeployerTransactor(address common.Address, transactor bind.ContractTransactor) (*SystemDeployerTransactor, error) {
	contract, err := bindSystemDeployer(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SystemDeployerTransactor{contract: contract}, nil
}

// NewSystemDeployerFilterer creates a new log filterer instance of SystemDeployer, bound to a specific deployed contract.
func NewSystemDeployerFilterer(address common.Address, filterer bind.ContractFilterer) (*SystemDeployerFilterer, error) {
	contract, err := bindSystemDeployer(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SystemDeployerFilterer{contract: contract}, nil
}

// bindSystemDeployer binds a generic wrapper to an already deployed contract.
func bindSystemDeployer(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := SystemDeployerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SystemDeployer *SystemDeployerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SystemDeployer.Contract.SystemDeployerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SystemDeployer *SystemDeployerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemDeployer.Contract.SystemDeployerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SystemDeployer *SystemDeployerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SystemDeployer.Contract.SystemDeployerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SystemDeployer *SystemDeployerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SystemDeployer.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SystemDeployer *SystemDeployerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemDeployer.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SystemDeployer *SystemDeployerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SystemDeployer.Contract.contract.Transact(opts, method, params...)
}

// SystemDeployerSystemContractDeployedIterator is returned from FilterSystemContractDeployed and is used to iterate over the raw logs and unpacked data for SystemContractDeployed events raised by the SystemDeployer contract.
type SystemDeployerSystemContractDeployedIterator struct {
	Event *SystemDeployerSystemContractDeployed // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SystemDeployerSystemContractDeployedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SystemDeployerSystemContractDeployed)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SystemDeployerSystemContractDeployed)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SystemDeployerSystemContractDeployedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SystemDeployerSystemContractDeployedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SystemDeployerSystemContractDeployed represents a SystemContractDeployed event raised by the SystemDeployer contract.
type SystemDeployerSystemContractDeployed struct {
	Name            string
	ContractAddress common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterSystemContractDeployed is a free log retrieval operation binding the contract event 0xbd64e14789a915ea657e42f2dbf0b973227708fa64b58766287637985d1ade69.
//
// Solidity: event SystemContractDeployed(string name, address contractAddress)
func (_SystemDeployer *SystemDeployerFilterer) FilterSystemContractDeployed(opts *bind.FilterOpts) (*SystemDeployerSystemContractDeployedIterator, error) {

	logs, sub, err := _SystemDeployer.contract.FilterLogs(opts, "SystemContractDeployed")
	if err != nil {
		return nil, err
	}
	return &SystemDeployerSystemContractDeployedIterator{contract: _SystemDeployer.contract, event: "SystemContractDeployed", logs: logs, sub: sub}, nil
}

// WatchSystemContractDeployed is a free log subscription operation binding the contract event 0xbd64e14789a915ea657e42f2dbf0b973227708fa64b58766287637985d1ade69.
//
// Solidity: event SystemContractDeployed(string name, address contractAddress)
func (_SystemDeployer *SystemDeployerFilterer) WatchSystemContractDeployed(opts *bind.WatchOpts, sink chan<- *SystemDeployerSystemContractDeployed) (event.Subscription, error) {

	logs, sub, err := _SystemDeployer.contract.WatchLogs(opts, "SystemContractDeployed")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SystemDeployerSystemContractDeployed)
				if err := _SystemDeployer.contract.UnpackLog(event, "SystemContractDeployed", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSystemContractDeployed is a log parse operation binding the contract event 0xbd64e14789a915ea657e42f2dbf0b973227708fa64b58766287637985d1ade69.
//
// Solidity: event SystemContractDeployed(string name, address contractAddress)
func (_SystemDeployer *SystemDeployerFilterer) ParseSystemContractDeployed(log types.Log) (*SystemDeployerSystemContractDeployed, error) {
	event := new(SystemDeployerSystemContractDeployed)
	if err := _SystemDeployer.contract.UnpackLog(event, "SystemContractDeployed", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
